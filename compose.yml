services:
  web:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    restart: unless-stopped
    volumes:
      - laravel-storage:/var/www/storage:ro
      - laravel-public-assets:/var/www/public/build:ro
    networks:
      - laravel
    ports:
      - "${NGINX_PORT:-80}:80"
    env_file:
      - .env
    depends_on:
      php-fpm:
        condition: service_healthy

  php-fpm:
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    restart: unless-stopped
    volumes:
      - laravel-public-assets:/var/www/public/build
      - laravel-storage:/var/www/storage
    env_file:
      - .env
    networks:
      - laravel
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      mysql:
        condition: service_healthy

  workspace:
   # For the workspace service, we will also create a custom image to install and setup all the necessary stuff.
    build:
      context: .
      dockerfile: ./docker/workspace/Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        XDEBUG_ENABLED: ${XDEBUG_ENABLED:-true}
        XDEBUG_MODE: develop,coverage,debug,profile
        XDEBUG_HOST: ${XDEBUG_HOST:-host.docker.internal}
        XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY:-DOCKER}
        XDEBUG_LOG: /dev/stdout
        XDEBUG_LOG_LEVEL: 0
    ports:
      - '${VITE_PORT:-5173}:5173'
    tty: true  # Enables an interactive terminal
    stdin_open: true  # Keeps standard input open for 'docker exec'
    env_file:
      - .env
    volumes:
      - ./:/var/www
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: ${DB_PORT:-3306}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      UPLOAD_LIMIT: 10M
    ports:
      - "8080:80"
    networks:
      - laravel
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_DATABASE: ${DB_DATABASE:-app}
      MYSQL_USER: ${DB_USERNAME:-laravel}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-secret}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  laravel:

volumes:
  laravel-storage:
  laravel-public-assets:
  mysql-data: